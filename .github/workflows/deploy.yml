# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch (usually 'main' or 'master')
  push:
    branches: ["main"] # IMPORTANT: Change this if your default branch is different (e.g., "master")

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false # Changed to false for production deploys

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Use the latest major version

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Or your project's required Node.js version (e.g., 18, 20)
          cache: yarn # Or 'yarn' if you use Yarn

      - name: Install dependencies
        run: yarn install # 'ci' is generally recommended for CI environments, or use 'npm install' or 'yarn install'

      - name: Build project
        run: yarn run build # IMPORTANT: Change this if your build command is different (e.g., vite build, yarn build)
        # If your build command needs environment variables (like PUBLIC_URL or BASE_PATH), set them here:
        # env:
        #   VITE_BASE_PATH: ${{ github.event.repository.name }} # Example for Vite if deploying to a subpath

      - name: Setup Pages
        uses: actions/configure-pages@v5 # Use the latest major version

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # Use the latest major version
        with:
          # Upload the directory produced by your build step
          path: './dist' # IMPORTANT: Change this if your build output folder is different (e.g., './build', './public')

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Sets the deployment URL in the GitHub environment tab
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job completing successfully
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Use the latest major version
